from multiprocessing import Pool, Process
import time
import math


def get_factorize_list(numbers):
    factors = [1]
    for num in numbers:
        for i in range(2, (math.ceil((num/2) + 1))):
            if num % i == 0:
                factors.append(i)
        factors.append(num)
    return factors


def get_factorize_list_async(numbers):
    with Pool(5) as p:
        print(p.map(get_factorize_list, numbers))


if __name__ == "__main__":

    p=Process(target=get_factorize_list, args=[128, 255, 99999, 10651060])

    start_time = time.time()
    get_factorize_list([128, 255, 99999, 10651060])
    print(f"Elapsed time of sync done function is %s seconds" % (time.time() - start_time))

    start_time = time.time(),
    get_factorize_list_async([128, 255, 99999, 10651060]),
    print(f"Elapsed time of async done function is %s seconds" % (time.time() - start_time))

    results_sync = get_factorize_list([128, 255, 99999, 10651060])
    assert results_sync[0] == [1, 2, 4, 8, 16, 32, 64, 128]
    assert results_sync[1] == [1, 3, 5, 15, 17, 51, 85, 255]
    assert results_sync[2] == [1, 3, 9, 41, 123, 271, 369, 813, 2439, 11111, 33333, 99999]
    assert results_sync[3] == [1, 2, 4, 5, 7, 10, 14, 20, 28, 35, 70, 140, 76079, 152158, 304316, 380395, 532553, 760790, 1065106, 1521580, 2130212, 2662765, 5325530, 10651060]


    results_async = get_factorize_list_async([128, 255, 99999, 10651060])
    assert results_async[0] == [1, 2, 4, 8, 16, 32, 64, 128]
    assert results_async[1] == [1, 3, 5, 15, 17, 51, 85, 255]
    assert results_async[2] == [1, 3, 9, 41, 123, 271, 369, 813, 2439, 11111, 33333, 99999]
    assert results_async[3] == [1, 2, 4, 5, 7, 10, 14, 20, 28, 35, 70, 140, 76079, 152158, 304316, 380395, 532553, 760790, 1065106, 1521580, 2130212, 2662765, 5325530, 10651060]




