import math
from multiprocessing import Pool, cpu_count
import math


def factorize(number):
    divider = []
    for i in range(1, int(math.sqrt(number)) + 1):
        if number % i == 0:
            divider.append(i)
    return divider


def factorize_sync(numbers):
    return [factorize(number) for number in numbers]


def factorize_async(numbers):
    with Pool(cpu_count()) as pool:
        result = pool.map(factorize, numbers)
    return result


factorize_async([24, 128])


a, b, c = factorize(128, 255, 99999)

assert a == [1, 2, 4, 8, 16, 32, 64, 128]
assert b == [1, 3, 5, 15, 17, 51, 85, 255]
assert c == [1, 3, 9, 41, 123, 271, 369, 813, 2439, 11111, 33333, 99999]
